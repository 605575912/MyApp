apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.3'

    defaultConfig {
        applicationId "cn.yzz.lol.share"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            moduleName "JniTest"
            ldLibs "log", "z", "m"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        debug {
            // No debug config
            storeFile file("xili123.keystore")
            storePassword "xili123"
            keyAlias "xili123.keystore"
            keyPassword "xili123"
        }

        release {
            storeFile file("xili123.keystore")
            storePassword "xili123"
            keyAlias "xili123.keystore"
            keyPassword "xili123"
        }
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled true //混淆
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "${variant.productFlavors[0].name}_${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    productFlavors {
//        website { buildConfigField "boolean", "AUTO_UPDATES", "false" }
        GoolePlay { buildConfigField "boolean", "AUTO_UPDATES", "false" }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile files('libs/Loaderjar.jar')
    compile files('libs/nineoldandroids.jar')
}
